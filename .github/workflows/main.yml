name: React Native CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment for build'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - production

jobs:
  build-android:
    name: Android CI/CD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 🔐 Decode .env file based on selected environment
      - name: Setup .env file
        run: |
          if [ "${ENVIRONMENT}" = "production" ]; then
            echo "${{ secrets.ENV_PRODUCTION }}" | base64 -d > .env
          elif [ "${ENVIRONMENT}" = "staging" ]; then
            echo "${{ secrets.ENV_STAGING }}" | base64 -d > .env
          else
            echo "${{ secrets.ENV_DEV }}" | base64 -d > .env
          fi
        env:
          ENVIRONMENT: ${{ github.event.inputs.environment }}

      # 🔐 Add debug.keystore
      - name: Setup Debug Keystore
        run: |
          mkdir -p android/app
          echo "${{ secrets.DEBUG_KEYSTORE_BASE64 }}" | base64 -d > android/app/debug.keystore

      # 🔐 Add release.keystore & gradle properties
      - name: Setup Release Keystore
        run: |
          mkdir -p android/app
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > android/app/release.keystore
          echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}" >> android/gradle.properties
          echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}" >> android/gradle.properties
          echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}" >> android/gradle.properties

      # - name: Build Debug APK
      #   run: |
      #     cd android
      #     ./gradlew assembleDebug

      # - name: Build Release APK
      #   run: |
      #     cd android
      #     ./gradlew assembleRelease

      # - name: Install Firebase CLI
      #   run: npm install -g firebase-tools

      # - name: Upload Debug APK to Firebase (Debug Testers)
      #   run: |
      #     firebase appdistribution:distribute android/app/build/outputs/apk/debug/app-debug.apk \
      #       --app 1:167074286498:android:34b05a46f0dbbfe41700fb \
      #       --token ${{ secrets.FIREBASE_TOKEN }} \
      #       --groups debug-testers \
      #       --release-notes "Debug build from GitHub Actions for ${{ github.event.inputs.environment }}"

      # - name: Upload Release APK to Firebase (Release Testers)
      #   run: |
      #     firebase appdistribution:distribute android/app/build/outputs/apk/release/app-release.apk \
      #       --app 1:167074286498:android:34b05a46f0dbbfe41700fb \
      #       --token ${{ secrets.FIREBASE_TOKEN }} \
      #       --groups release-testers \
      #       --release-notes "Release build from GitHub Actions for ${{ github.event.inputs.environment }}"

      # - name: Upload APK Artifacts
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: APKs
      #     path: |
      #       android/app/build/outputs/apk/debug/app-debug.apk
      #       android/app/build/outputs/apk/release/app-release.apk
